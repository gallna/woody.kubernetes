apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    k8s-app: grafana
    task: monitoring
  name: monitoring-grafana
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: grafana
      task: monitoring
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: grafana
        task: monitoring
    spec:
      serviceAccount: io-rancher-system
      serviceAccountName: io-rancher-system
      containers:
      - name: grafana
        imagePullPolicy: IfNotPresent
        image: gcr.io/google_containers/heapster-grafana-amd64:v4.4.1
        env:
        - name: INFLUXDB_HOST
          value: monitoring-influxdb
        - name: INFLUXDB_SERVICE_URL
          value: http://monitoring-influxdb:8086
        - name: GRAFANA_PORT
          value: "3000"
        - name: GF_AUTH_BASIC_ENABLED
          value: "false"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          value: Admin
        - name: GF_SERVER_ROOT_URL
          value: /
        - name: GF_PATHS_PLUGINS
          value: /var/lib/grafana/plugins
        - name: GF_LOG_MODE
          value: console
        ports:
        - containerPort: 3000
          protocol: TCP
        resources:
          requests:
            cpu: "1"
            memory: "512Mi"
          limits:
            cpu: "4"
            memory: "2Gi"
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-pv
      restartPolicy: Always
      volumes:
      - name: grafana-pv
        persistentVolumeClaim:
          claimName: grafana-pvc
